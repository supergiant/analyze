// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetCheckResultsHandlerFunc turns a function with the right signature into a get check results handler
type GetCheckResultsHandlerFunc func(GetCheckResultsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetCheckResultsHandlerFunc) Handle(params GetCheckResultsParams) middleware.Responder {
	return fn(params)
}

// GetCheckResultsHandler interface for that can handle valid get check results params
type GetCheckResultsHandler interface {
	Handle(GetCheckResultsParams) middleware.Responder
}

// NewGetCheckResults creates a new http.Handler for the get check results operation
func NewGetCheckResults(ctx *middleware.Context, handler GetCheckResultsHandler) *GetCheckResults {
	return &GetCheckResults{Context: ctx, Handler: handler}
}

/*GetCheckResults swagger:route GET /check getCheckResults

Returns list of check results produced by installed plugins

*/
type GetCheckResults struct {
	Context *middleware.Context
	Handler GetCheckResultsHandler
}

func (o *GetCheckResults) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetCheckResultsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
