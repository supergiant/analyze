{"version":3,"sources":["webpack:///./src/app/plugins/plugins-routing.module.ts","webpack:///./src/app/plugins/plugins.component.html","webpack:///./src/app/plugins/plugins.component.scss","webpack:///./src/app/plugins/plugins.component.ts","webpack:///./src/app/plugins/plugins.module.ts","webpack:///./src/app/plugins/plugins.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAqD;AACE;AACkB;AAEzE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kFAAgB;KAC5B;CACF,CAAC;AAMF;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QAJhC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;;;;;ACfjC,+IAA+I,eAAe,yDAAyD,sBAAsB,mD;;;;;;;;;;;ACA7O,2BAA2B,wBAAwB,EAAE,+CAA+C,mU;;;;;;;;;;;;;;;;;;;;;;;;;ACAlD;AACkB;AAOpE;IAGE,0BACU,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IACpC,CAAC;IAEL,mCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC;IAC3C,CAAC;IATU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAK0B,8EAAc;OAJ7B,gBAAgB,CAW5B;IAAD,uBAAC;CAAA;AAX4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRY;AACM;AAEiB;AACL;AACC;AACW;AACd;AAczD;IAAA;IAA6B,CAAC;IAAjB,aAAa;QAZzB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,mEAAgB,CAAC;YAChC,OAAO,EAAE;gBACP,4DAAY;gBACZ,4EAAoB;gBACpB,qEAAgB;gBAChB,+DAAa;aACd;YACD,SAAS,EAAE;gBACT,8EAAc;aACf;SACF,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBiB;AACO;AAGlD;IAEE,wBACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACtB,CAAC;IAEL,4BAAG,GAAH;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAC1C,CAAC;IARU,cAAc;QAD1B,gEAAU,EAAE;yCAIK,+DAAU;OAHf,cAAc,CAS1B;IAAD,qBAAC;CAAA;AAT0B","file":"plugins-plugins-module.js","sourcesContent":["import { NgModule }             from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PluginsComponent }     from \"src/app/plugins/plugins.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PluginsComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PluginsRoutingModule { }\n","module.exports = \"<div *ngFor=\\\"let plugin of (plugins | async)\\\">\\n\\n  <mat-card class=\\\"plugin transparent\\\">\\n    <mat-card-title>\\n      {{ plugin.name }}\\n    </mat-card-title>\\n    <mat-card-content>\\n      {{ plugin.description }}\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\"","module.exports = \".plugin {\\n  margin-bottom: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi91c3Ivc3JjL2FwcC9zcmMvYXBwL3BsdWdpbnMvcGx1Z2lucy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG9CQUFtQixFQUNwQiIsImZpbGUiOiJzcmMvYXBwL3BsdWdpbnMvcGx1Z2lucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wbHVnaW4ge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { PluginsService }    from \"src/app/plugins/plugins.service\";\n\n@Component({\n  selector: 'app-plugins',\n  templateUrl: './plugins.component.html',\n  styleUrls: ['./plugins.component.scss']\n})\nexport class PluginsComponent implements OnInit {\n  plugins: any;\n\n  constructor(\n    private pluginsService: PluginsService\n  ) { }\n\n  ngOnInit() {\n    this.plugins = this.pluginsService.all();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PluginsRoutingModule } from './plugins-routing.module';\nimport { PluginsComponent }     from './plugins.component';\nimport { HttpClientModule }     from \"@angular/common/http\";\nimport { PluginsService }       from \"src/app/plugins/plugins.service\";\nimport { MatCardModule }        from \"@angular/material\";\n\n@NgModule({\n  declarations: [PluginsComponent],\n  imports: [\n    CommonModule,\n    PluginsRoutingModule,\n    HttpClientModule,\n    MatCardModule,\n  ],\n  providers: [\n    PluginsService,\n  ]\n})\nexport class PluginsModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable()\nexport class PluginsService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  all() {\n    return this.http.get('/api/v1//plugin');\n  }\n}\n"],"sourceRoot":""}