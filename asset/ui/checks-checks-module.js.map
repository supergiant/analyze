{"version":3,"sources":["webpack:///./src/app/checks/checks-routing.module.ts","webpack:///./src/app/checks/checks.component.html","webpack:///./src/app/checks/checks.component.scss","webpack:///./src/app/checks/checks.component.ts","webpack:///./src/app/checks/checks.module.ts"],"names":[],"mappings":"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","file":"checks-checks-module.js","sourcesContent":["import { NgModule }             from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChecksComponent }      from \"src/app/checks/checks.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChecksComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChecksRoutingModule { }\n","module.exports = \"<mat-card class=\\\"check-item transparent\\\" *ngFor=\\\"let check of (checks$ | async); let checkIndex = index\\\">\\n  <mat-card-title>\\n    <div> {{ check.name }}</div>\\n    <section class=\\\"check-date\\\" [ngClass]=\\\"{\\n      'green': check.checkStatus == 'GREEN',\\n      'yellow': check.checkStatus == 'YELLOW',\\n      'red': check.checkStatus == 'RED'\\n    }\\\">\\n      <div>\\n        <div class=\\\"status-time\\\"> {{ check.completedAt | date: 'hh:mm:ss' }}</div>\\n        <div class=\\\"status-time\\\"> {{ check.completedAt | date: 'MMM d, y'}}</div>\\n      </div>\\n      &nbsp;\\n      <mat-icon [ngSwitch]=\\\"check.checkStatus\\\">\\n        <span *ngSwitchCase=\\\"'RED'\\\">block</span>\\n        <span *ngSwitchCase=\\\"'YELLOW'\\\">warning</span>\\n        <span *ngSwitchCase=\\\"'GREEN'\\\">check_circle</span>\\n      </mat-icon>\\n    </section>\\n  </mat-card-title>\\n  <br>\\n  <!-- TODO: remove harcode -->\\n\\n  <div *ngIf=\\\"check.description as data\\\">\\n    <mat-accordion>\\n      <mat-expansion-panel>\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Details\\n          </mat-panel-title>\\n        </mat-expansion-panel-header>\\n        <div class=\\\"scrollable-area\\\">\\n          <ng-container *ngIf=\\\"checkIndex === 0\\\">\\n            <table>\\n              <tbody>\\n              <tr>\\n                <th>\\n                  <div>Node Name</div>\\n                </th>\\n                <th>\\n                  <div>Pod Resource Requirements</div>\\n                </th>\\n              </tr>\\n              <tr *ngFor=\\\"let node of data.nodesResourceRequirements\\\">\\n                <td>\\n                  <div>{{ node.nodeName}}</div>\\n                </td>\\n                <td>\\n                  <table>\\n                    <tbody>\\n                    <tr>\\n                      <th>\\n                        <div>Pod Name</div>\\n                      </th>\\n                      <th>\\n                        <div>Containers Resource Requirements</div>\\n                      </th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let pod of node.podResourceRequirements\\\">\\n                      <td>\\n                        <div> {{pod.podName}}</div>\\n                      </td>\\n                      <td>\\n                        <table>\\n                          <tbody>\\n                          <tr>\\n                            <th>\\n                              <div>Container Name</div>\\n                            </th>\\n                            <th>\\n                              <div>Container Image</div>\\n                            </th>\\n                            <th>\\n                              <div>Requests</div>\\n                            </th>\\n                            <th>\\n                              <div>Limits</div>\\n                            </th>\\n                          </tr>\\n                          <tr *ngFor=\\\"let container of pod.containersResourceRequirements\\\">\\n                            <td>\\n                              <div>{{ container.containerName }}</div>\\n                            </td>\\n                            <td>\\n                              <div>{{ container.containerImage }}</div>\\n                            </td>\\n                            <td>\\n                              <table class=\\\"requests\\\">\\n                                <tbody>\\n                                <tr>\\n                                  <th>\\n                                    <div>Ram</div>\\n                                  </th>\\n                                  <td>\\n                                    <div [ngClass]=\\\"{warn: !container.requests.ram }\\\">\\n                                      {{ container.requests.ram || IS_NOT_SET_MSG }}\\n                                    </div>\\n                                  </td>\\n                                </tr>\\n                                <tr>\\n                                  <th>\\n                                    <div>Cpu</div>\\n                                  </th>\\n                                  <td>\\n                                    <div [ngClass]=\\\"{warn: !container.requests.cpu }\\\">\\n                                      {{ container.requests.cpu || IS_NOT_SET_MSG }}\\n                                    </div>\\n                                  </td>\\n                                </tr>\\n                                </tbody>\\n                              </table>\\n                            </td>\\n                            <td>\\n                              <table class=\\\"limits\\\">\\n                                <tbody>\\n                                <tr>\\n                                  <th>\\n                                    <div>Ram</div>\\n                                  </th>\\n                                  <td>\\n                                    <div [ngClass]=\\\"{warn: !container.limits.ram}\\\">\\n                                      {{ container.limits.ram || IS_NOT_SET_MSG }}\\n                                    </div>\\n                                  </td>\\n                                </tr>\\n                                <tr>\\n                                  <th>\\n                                    <div>Cpu</div>\\n                                  </th>\\n                                  <td>\\n                                    <div [ngClass]=\\\"{warn: !container.limits.cpu}\\\">\\n                                      {{ container.limits.cpu || IS_NOT_SET_MSG }}\\n                                    </div>\\n                                  </td>\\n                                </tr>\\n                                </tbody>\\n                              </table>\\n                            </td>\\n                          </tr>\\n                          </tbody>\\n                        </table>\\n                      </td>\\n                    </tr>\\n                    </tbody>\\n                  </table>\\n                </td>\\n              </tr>\\n              </tbody>\\n            </table>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"checkIndex === 1\\\">\\n            <table>\\n              <tr>\\n                <th>Region/Zone</th>\\n                <th>Instance ID</th>\\n                <th>RAM requested (GIB)</th>\\n                <th>RAM not requested (GIB)</th>\\n                <th>Total RAM (GIB)</th>\\n                <th>Recommended to sunset</th>\\n              </tr>\\n\\n              <tr *ngFor=\\\"let node of data\\\">\\n                <td>\\n                  {{ node.kube.region}}\\n                </td>\\n                <td>\\n                  {{ node.cloudProvider.instanceId}}\\n                </td>\\n                <td>\\n                  {{ node.kube.memoryRequests / 1000000000}}\\n                </td>\\n                <td>\\n                  {{ (node.kube.allocatableMemory - node.kube.memoryRequests) / 1000000000 }}\\n                </td>\\n                <td>\\n                  {{ node.kube.allocatableMemory / 1000000000}}\\n                </td>\\n                <td>\\n                  {{node.kube.isRecommendedToSunset ? 'Yes' : 'No'}}\\n                </td>\\n              </tr>\\n            </table>\\n          </ng-container>\\n        </div>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n\\n  </div>\\n\\n\\n  <mat-tab-group>\\n    <mat-tab *ngFor=\\\"let check of check.possibleActions as action\\\">\\n      <ng-template mat-tab-label>\\n        {{ check.name }}\\n      </ng-template>\\n      <div class=\\\"description\\\">\\n        {{ check.description }}\\n      </div>\\n      <mat-chip-list class=\\\"action\\\">\\n        <mat-chip class=\\\"red\\\">RUN</mat-chip>\\n      </mat-chip-list>\\n    </mat-tab>\\n\\n  </mat-tab-group>\\n\\n</mat-card>\\n\\n\"","module.exports = \".scrollable-area {\\n  max-height: 500px;\\n  overflow-y: scroll;\\n  margin-top: 12px; }\\n\\n.mat-tab-header .mat-ink-bar {\\n  background-color: transparent !important;\\n  border-bottom: 2px dotted white;\\n  width: auto; }\\n\\n.mat-expansion-panel-header {\\n  border: 1px solid rgba(255, 255, 255, 0.2); }\\n\\n.mat-tab-body-content {\\n  padding: 20px 0; }\\n\\n.mat-card-title {\\n  display: flex !important;\\n  justify-content: space-between; }\\n\\n.description {\\n  padding-bottom: 24px; }\\n\\n.action .red {\\n  background: red; }\\n\\n.check-date {\\n  font-size: 12px;\\n  display: flex; }\\n\\n.check-date.red {\\n    color: red; }\\n\\n.check-date.yellow {\\n    color: yellow; }\\n\\n.check-date.green {\\n    color: green; }\\n\\n.check-item {\\n  margin: 20px; }\\n\\n.mat-expansion-panel {\\n  background: transparent; }\\n\\ntable {\\n  width: 100%;\\n  height: 100%; }\\n\\ntable th {\\n    background-color: rgba(255, 0, 166, 0.25);\\n    border: none;\\n    min-height: 45px; }\\n\\ntable tr {\\n    background-color: rgba(255, 255, 255, 0.1); }\\n\\ntable td {\\n    vertical-align: top;\\n    padding: 5px; }\\n\\ntable td ~ table {\\n      padding: 0; }\\n\\n.requests .warn {\\n  color: red; }\\n\\n.limits .warn {\\n  color: yellow; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi91c3Ivc3JjL2FwcC9zcmMvYXBwL2NoZWNrcy9jaGVja3MuY29tcG9uZW50LnNjc3MiLCIvdXNyL3NyYy9hcHAvc3JjL2Fzc2V0cy9zdHlsZXMvY29sb3JzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7RUFDRSxrQkFBaUI7RUFDakIsbUJBQWtCO0VBQ2xCLGlCQUFnQixFQUNqQjs7QUFFRDtFQUVJLHlDQUF3QztFQUN4QyxnQ0NYUztFRFlULFlBQVcsRUFDWjs7QUFHSDtFQUNFLDJDQUEwQyxFQUMzQzs7QUFFRDtFQUNFLGdCQUFlLEVBQ2hCOztBQUVEO0VBQ0UseUJBQXdCO0VBQ3hCLCtCQUE4QixFQUMvQjs7QUFFRDtFQUNFLHFCQUFvQixFQUNyQjs7QUFFRDtFQUVJLGdCQUFlLEVBQ2hCOztBQUdIO0VBQ0UsZ0JBQWU7RUFDZixjQUFhLEVBYWQ7O0FBZkQ7SUFLSSxXQUFVLEVBQ1g7O0FBTkg7SUFTSSxjQUFhLEVBQ2Q7O0FBVkg7SUFhSSxhQUFZLEVBQ2I7O0FBR0g7RUFDRSxhQUFZLEVBQ2I7O0FBVUQ7RUFDRSx3QkFBdUIsRUFDeEI7O0FBRUQ7RUFDRSxZQUFXO0VBQ1gsYUFBWSxFQW9CYjs7QUF0QkQ7SUFLSSwwQ0FBeUM7SUFDekMsYUFBWTtJQUNaLGlCQUFnQixFQUNqQjs7QUFSSDtJQVdJLDJDQUEwQyxFQUMzQzs7QUFaSDtJQWVJLG9CQUFtQjtJQUNuQixhQUFZLEVBS2I7O0FBckJIO01BbUJNLFdBQVUsRUFDWDs7QUFLTDtFQUVJLFdBQVUsRUFDWDs7QUFHSDtFQUVJLGNBQWEsRUFDZCIsImZpbGUiOiJzcmMvYXBwL2NoZWNrcy9jaGVja3MuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwifnNyYy9hc3NldHMvc3R5bGVzL2NvbG9yc1wiO1xuXG4kdGFibGUtYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XG5cbi5zY3JvbGxhYmxlLWFyZWEge1xuICBtYXgtaGVpZ2h0OiA1MDBweDtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICBtYXJnaW4tdG9wOiAxMnB4O1xufVxuXG4ubWF0LXRhYi1oZWFkZXIge1xuICAubWF0LWluay1iYXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IGRvdHRlZCAkd2hpdGU7XG4gICAgd2lkdGg6IGF1dG87XG4gIH1cbn1cblxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyIHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpO1xufVxuXG4ubWF0LXRhYi1ib2R5LWNvbnRlbnQge1xuICBwYWRkaW5nOiAyMHB4IDA7XG59XG5cbi5tYXQtY2FyZC10aXRsZSB7XG4gIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4uZGVzY3JpcHRpb24ge1xuICBwYWRkaW5nLWJvdHRvbTogMjRweDtcbn1cblxuLmFjdGlvbiB7XG4gIC5yZWQge1xuICAgIGJhY2tncm91bmQ6IHJlZDtcbiAgfVxufVxuXG4uY2hlY2stZGF0ZSB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZGlzcGxheTogZmxleDtcblxuICAmLnJlZCB7XG4gICAgY29sb3I6IHJlZDtcbiAgfVxuXG4gICYueWVsbG93IHtcbiAgICBjb2xvcjogeWVsbG93O1xuICB9XG5cbiAgJi5ncmVlbiB7XG4gICAgY29sb3I6IGdyZWVuO1xuICB9XG59XG5cbi5jaGVjay1pdGVtIHtcbiAgbWFyZ2luOiAyMHB4O1xufVxuXG5AbWl4aW4gYm9yZGVyLWJvdHRvbSB7XG4gIGJvcmRlci1ib3R0b206ICR0YWJsZS1ib3JkZXI7XG59XG5cbkBtaXhpbiBib3JkZXItcmlnaHQge1xuICBib3JkZXItcmlnaHQ6ICR0YWJsZS1ib3JkZXI7XG59XG5cbi5tYXQtZXhwYW5zaW9uLXBhbmVsIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcblxuICB0aCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDAsIDE2NiwgMC4yNSk7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIG1pbi1oZWlnaHQ6IDQ1cHg7XG4gIH1cblxuICB0ciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xuICB9XG5cbiAgdGQge1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgcGFkZGluZzogNXB4O1xuXG4gICAgJn50YWJsZSB7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgIH1cbiAgfVxufVxuXG5cbi5yZXF1ZXN0cyB7XG4gIC53YXJuIHtcbiAgICBjb2xvcjogcmVkO1xuICB9XG59XG5cbi5saW1pdHMge1xuICAud2FybiB7XG4gICAgY29sb3I6IHllbGxvdztcbiAgfVxufVxuIiwiJGJsYWNrLXRyYW5zcGFyZW50OiByZ2JhKDAsIDAsIDAsIDAuNyk7XG4kc2ctcGluazogI0QxMDA4ODtcbiR3aGl0ZTogd2hpdGU7XG4iXX0= */\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { HttpClient }                           from \"@angular/common/http\";\nimport { map }                                  from \"rxjs/operators\";\nimport { Observable }                           from \"rxjs\";\n\n@Component({\n  selector: 'app-checks',\n  templateUrl: './checks.component.html',\n  styleUrls: ['./checks.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ChecksComponent implements OnInit {\n\n  checks$: Observable<any[]>;\n\n  readonly IS_NOT_SET_MSG: string = 'Is not set';\n\n  constructor(\n    private http: HttpClient,\n  ) {\n  }\n\n  ngOnInit() {\n    const apiV1Check = '/api/v1/check';\n    const mapJson = map((checks: any[]) => checks.map(check => {\n      try {\n        const description = JSON.parse(check.description);\n        return {\n          ...check, description\n        }\n      } catch (e) {\n        //  is not json\n        return check;\n      }\n    }));\n    this.checks$ = this.http.get(apiV1Check).pipe(\n      mapJson,\n    );\n  }\n\n  isObject(val) {\n    return typeof val === 'object';\n  }\n}\n","import { NgModule }     from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ChecksRoutingModule }                                                             from './checks-routing.module';\nimport { ChecksComponent }                                                                 from './checks.component';\nimport { HttpClientModule }                                                                from \"@angular/common/http\";\nimport { MatCardModule, MatTabsModule, MatExpansionModule, MatIconModule, MatChipsModule } from \"@angular/material\";\n\n@NgModule({\n  declarations: [ChecksComponent],\n  imports: [\n    CommonModule,\n    ChecksRoutingModule,\n    HttpClientModule,\n    MatCardModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatChipsModule,\n  ],\n})\nexport class ChecksModule {\n}\n"],"sourceRoot":""}